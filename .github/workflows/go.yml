name: Go

on: push

env:
  # rewrite go env GOCACHE to something well known so we can use actions/cache with it
  GOCACHE: "/home/runner/go/cache"
  CLI: "v0.38.0"

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"

    - name: Set up Go 1.14
      uses: actions/setup-go@v2
      with:
        go-version: 1.14

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - uses: actions/cache@v2
      with:
        path: |
          ~/go/pkg/mod
          ~/go/src
          /hone/runner/go/cache
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Print Go Version
      run: go version

    - name: Build
      run: go build -mod=readonly -v .

  test:
    name: "Test"
    needs: [build]
    runs-on: ubuntu-latest
    steps:
    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
    - <<: &installcli
      name: Install forge CLI
      run: |
        wget https://github.com/stormforger/cli/releases/download/${CLI}/forge_${CLI}_linux_amd64.tar.gz
        tar -xzf forge_${CLI}_linux_amd64.tar.gz
        ./forge version

    - name: Run Validation Run
      run: |
        ./scripts/data-source.sh "staging" # export test-data
        ./forge datasource push demo *.csv --name-prefix-path="example-github-actions/staging/" --auto-field-names

        ./scripts/compile-loadtest.sh "staging" /tmp/loadtest.js
        ./forge test-case launch "demo/example-github-actions-staging" --validate --test-case-file="/tmp/loadtest.js" \
          --title="${{github.workflow}}#${{github.run_number}} (${{github.ref}})" --notes="Name | Value
          --- | ---
          Ref | ${{github.ref}}
          Sha | [${{github.event.head_commit.id}}](${{github.event.head_commit.url}})
          Workflow | ${{github.workflow}}
          Run#     | ${{github.run_number}}
          RunID    | ${{github.run_id}}
          Actor    | ${{github.actor}}

          Message: ${{github.event.head_commit.message}}
        "
      env:
        STORMFORGER_JWT: ${{ secrets.STORMFORGER_JWT }}

  deploy:
    name: "Deploy (Production)"
    needs: [test]
    runs-on: ubuntu-latest
    # run the deploy pipeline on master only
    if: github.ref == 'refs/heads/master'
    steps:
    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
    - <<: *installcli
    - name: Run Load-Test
      run: |
        ./scripts/data-source.sh "production" # export test-data
        ./forge datasource push demo *.csv --name-prefix-path="example-github-actions/production/" --auto-field-names

        ./scripts/compile-loadtest.sh "production" /tmp/loadtest.js
        ./forge test-case launch "demo/example-github-actions-production" --test-case-file="/tmp/loadtest.js" --nfr-check-file="./loadtest/loadtest.nfr.yaml" \
          --title="${{github.workflow}}#${{github.run_number}} (${{github.ref}})" --notes="Name | Value
          --- | ---
          Ref | ${{github.ref}}
          Sha | [${{github.event.head_commit.id}}](${{github.event.head_commit.url}})
          Workflow | ${{github.workflow}}
          Run#     | ${{github.run_number}}
          RunID    | ${{github.run_id}}
          Actor    | ${{github.actor}}

          Message: ${{github.event.head_commit.message}}
        "
      env:
        STORMFORGER_JWT: ${{ secrets.STORMFORGER_JWT }}
